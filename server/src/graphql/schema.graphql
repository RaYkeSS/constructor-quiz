### This file was generated by Nexus Schema
### Do not make changes to this file directly


type Answer {
  correct: Boolean
  id: String
  question: Question
  questionId: String
  userAnswers: [UserAnswer]
  value: String
}

type CompletedTest {
  id: String
  right: Int
  test: Test
  testId: String
  user: User
  userId: String
  wrong: Int
}

type Mutation {
  completeTest(right: Int, testId: ID, userId: ID, wrong: Int): CompletedTest
  createAnswer(correct: Boolean, questionId: ID, value: String): Answer
  createQuestion(description: String, order: Int, testId: ID, type: String): Question
  createTest(authorId: String, title: String): Test
  createUser(email: String, password: String): UserWithToken
  login(email: String, password: String): UserWithToken
  submitAnswer(answerId: ID, userId: ID, value: String): UserAnswer
}

type Query {
  getAnswersByQuestion(questionId: ID): [Answer]
  getQuestionsByTest(testId: ID): [Question]
  getTestById(id: ID): Test
  getTests: [Test]
  getUserById(id: ID): User
  getUsers: [User]
}

type Question {
  answers: [Answer]
  description: String
  id: String
  order: Int
  test: Test
  testId: String
  type: QuestionType
}

enum QuestionType {
  MULTIPLE_CHOICE
  SINGLE_CHOICE
  TEXT_INPUT
}

type Test {
  author: User
  authorId: String
  completedTests: [CompletedTest]
  createdAt: String
  id: String
  questions: [Question]
  title: String
}

type User {
  completedTests: [CompletedTest]
  email: String
  id: String
  password: String
  tests: [Test]
  userAnswers: [UserAnswer]
}

type UserAnswer {
  answer: Answer
  answerId: String
  id: String
  user: User
  userId: String
  value: String
}

type UserWithToken {
  token: String
  user: User
}